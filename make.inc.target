# -*- Makefile -*-
####################################################################
#  LAPACK make include file.                                       #
#  LAPACK, Version 3.2.1                                           #
#  June 2009		                                               #
####################################################################
#
# See the INSTALL/ directory for more examples.
#
SHELL = /bin/sh
#
#  The machine (platform) identifier to append to the library names
#
PLAT = 
# PLAT = _MPC5748G
#  
#  Modify the FORTRAN and OPTS definitions to refer to the
#  compiler and desired compiler options for your machine.  NOOPT
#  refers to the compiler options desired when NO OPTIMIZATION is
#  selected.  Define LOADER and LOADOPTS to refer to the loader
#  and desired load options for your machine.
#
#######################################################

### added by user

# basic directory
VLE_TOOLCHAIN_DIR = ${HOME}/NXP/S32DS_Power_v2.1/S32DS/build_tools/powerpc-eabivle-4_9
VLE_EWL_DIR = ${VLE_TOOLCHAIN_DIR}/../e200_ewl2
CROSS_PREFIX = powerpc-eabivle
SYSROOT = ${VLE_EWL_DIR}
SPECS = ${VLE_EWL_DIR}/lib/ewl_c9x_hosted.specs

# compilers and flags
CC = ${VLE_TOOLCHAIN_DIR}/bin/${CROSS_PREFIX}-gcc
AR = ${VLE_TOOLCHAIN_DIR}/bin/${CROSS_PREFIX}-ar
CFLAGS = -std=c99 -O3 -D_EWL_OS_DISK_FILE_SUPPORT -specs=${SPECS} --sysroot=${SYSROOT} -I${SYSROOT}/EWL_C/include -I${SYSROOT}/EWL_C/include/pa -I${SYSROOT}/EWL_C/include/extras -I$(TOPDIR)/INCLUDE
# CFLAGS = -std=c99 -O3 -c -fmessage-length=0 -fstrict-volatile-bitfields -ffunction-sections -fdata-sections -mcpu=e200z4 -specs=${SPECS} -mbig -mvle -mregnames -mhard-float --sysroot=${SYSROOT} -I${SYSROOT}/EWL_C/include -I${SYSROOT}/EWL_C/include/pa -I${SYSROOT}/EWL_C/include/extras -I$(TOPDIR)/INCLUDE

# linker flags
# SRC_LD += ${realpath Linker_Files/libs.ld}
# SRC_LD += ${realpath Linker_Files/57xx_flash.ld}
# LD_FLAGS += $(foreach d, $(SRC_LD),-T"$d")
# LD_FLAGS += -Wl,-Map,"${PROJ_NAME}.map"
# LD_FLAGS += -Xlinker
# LD_FLAGS += --gc-sections

# Original ones
# CC        = gcc
# if no wrapping of the blas library is needed, uncomment next line
# CC        = gcc -DNO_BLAS_WRAP
# CFLAGS    = -O3 -I$(TOPDIR)/INCLUDE
# LOADER    = gcc
# LOADOPTS  =
NOOPT     = -O0 -I$(TOPDIR)/INCLUDE
DRVCFLAGS = $(CFLAGS)
F2CCFLAGS = $(CFLAGS) -DNO_ONEXIT
#######################################################################

#
# Timer for the SECOND and DSECND routines
#
# Default : SECOND and DSECND will use a call to the EXTERNAL FUNCTION ETIME
# TIMER    = EXT_ETIME
# For RS6K : SECOND and DSECND will use a call to the EXTERNAL FUNCTION ETIME_
# TIMER    = EXT_ETIME_
# For gfortran compiler: SECOND and DSECND will use a call to the INTERNAL FUNCTION ETIME
# TIMER    = INT_ETIME
# If your Fortran compiler does not provide etime (like Nag Fortran Compiler, etc...)
# SECOND and DSECND will use a call to the Fortran standard INTERNAL FUNCTION CPU_TIME 
TIMER    = INT_CPU_TIME
# If neither of this works...you can use the NONE value... In that case, SECOND and DSECND will always return 0
# TIMER     = NONE
#
#  The archiver and the flag(s) to use when building archive (library)
#  If you system has no ranlib, set RANLIB = echo.
#
ARCH     = ${VLE_TOOLCHAIN_DIR}/bin/${CROSS_PREFIX}-ar
ARCHFLAGS= crs
RANLIB   = ranlib
#
#  The location of BLAS library for linking the testing programs.
#  The target's machine-specific, optimized BLAS library should be
#  used whenever possible.
#
BLASLIB      = ../../libblas$(PLAT).a
#
#  Location of the extended-precision BLAS (XBLAS) Fortran library
#  used for building and testing extended-precision routines.  The
#  relevant routines will be compiled and XBLAS will be linked only if
#  USEXBLAS is defined.
#
# USEXBLAS    = Yes
XBLASLIB     =
# XBLASLIB    = -lxblas
#
#  Names of generated libraries.
#
LAPACKLIB    = liblapack$(PLAT).a
F2CLIB       = ../../F2CLIBS/libf2c$(PLAT).a
TMGLIB       = libtmglib$(PLAT).a
EIGSRCLIB    = libeigsrc$(PLAT).a
LINSRCLIB    = liblinsrc$(PLAT).a
